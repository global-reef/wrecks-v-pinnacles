# Extract and reshape posterior draws for zone-level effects
zone_diffs <- fit_zone %>%
spread_draws(
b_Herbivore_Zonenearshore, b_Herbivore_Zonepelagic,
b_Invertivore_Zonenearshore, b_Invertivore_Zonepelagic,
b_Mesopredator_Zonenearshore, b_Mesopredator_Zonepelagic,
b_HTLP_Zonenearshore, b_HTLP_Zonepelagic
) %>%
pivot_longer(
cols = starts_with("b_"),
names_to = "parameter",
values_to = "value"
) %>%
mutate(
Functional_Group = case_when(
str_detect(parameter, "Herbivore") ~ "Herbivore",
str_detect(parameter, "Invertivore") ~ "Invertivore",
str_detect(parameter, "Mesopredator") ~ "Mesopredator",
str_detect(parameter, "HTLP") ~ "HTLP"
),
Zone = case_when(
str_detect(parameter, "Zonenearshore") ~ "nearshore",
str_detect(parameter, "Zonepelagic") ~ "pelagic"
)
) %>%
mutate(Functional_Group = factor(
Functional_Group,
levels = c("Herbivore", "Invertivore","Mesopredator","HTLP")
)) %>%
mutate(Zone = factor(
Zone,
levels = c("nearshore", "pelagic"),
labels = c("Nearshore", "Pelagic")
))
# Plot posterior differences relative to wrecks
zone_diff_plot <- ggplot(zone_diffs, aes(x = value, y = Functional_Group, fill = Zone)) +
stat_halfeye(
slab_alpha = 0.8,
point_interval = median_qi,
.width = 0.95,
position = position_dodge(width = 0.6)
) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(
title = "Posterior Differences in Log-Abundance\n (vs. Shipwrecks)",
x = "Estimated Log Difference (relative to Shipwreck)",
y = "Functional Group",
fill = "Comparison"
) +
scale_fill_manual(values = c(
"Nearshore" = "#188041",
"Pelagic" = "#a6dede"
)) +
theme_minimal(base_size = 12) +
theme(
legend.position = "right",
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)
print(zone_diff_plot)
save_zone_proportion_outputs <- function(prop_draws_plot,  zone_diff_plot, fg_zone_plot, output_dir, analysis_date) {
# Save posterior distribution plot
ggsave(
filename = file.path(output_dir, paste0("Posterior_FunctionalGroup_Proportions_", analysis_date, ".png")),
plot = prop_draws_plot,
width = 8,
height = 6
)
# Save proportional composition bar plot
ggsave(
filename = file.path(output_dir, paste0("Zonewise_FunctionalGroup_Composition_", analysis_date, ".png")),
plot = fg_zone_plot,
width = 8,
height = 6
)
# Save posterior differences
ggsave(
filename = file.path(output_dir, paste0("Zonewise_Posteror_Differences_", analysis_date, ".png")),
plot =  zone_diff_plot,
width = 8,
height = 6
)
message("✅ Zone-level plots saved to: ", output_dir)
}
# Call the function
save_zone_proportion_outputs(prop_draws_plot = prop_draws_plot, fg_zone_plot = proportion_plot_zone, output_dir = output_dir,  zone_diff_plot =  zone_diff_plot, analysis_date = analysis_date)
# Draws for pelagic vs. wreck for HTLP
draws_htlp <- fit_zone %>%
spread_draws(b_HTLP_Zonepelagic)
# Probability that HTLP is higher in pelagic than wrecks
prob_htlp <- mean(draws_htlp$b_HTLP_Zonepelagic > 0)
# Nearshore vs. Wreck
prob_htlp_nearshore <- fit_zone %>%
spread_draws(b_HTLP_Zonenearshore) %>%
summarise(prob = mean(b_HTLP_Zonenearshore > 0))
# Mesopredator
prob_meso_pelagic <- fit_zone %>%
spread_draws(b_Mesopredator_Zonepelagic) %>%
summarise(prob = mean(b_Mesopredator_Zonepelagic > 0))
# Invertivore
prob_invert_nearshore <- fit_zone %>%
spread_draws(b_Invertivore_Zonenearshore) %>%
summarise(prob = mean(b_Invertivore_Zonenearshore > 0))
# Herbivore
prob_herb_nearshore <- fit_zone %>%
spread_draws(b_Herbivore_Zonenearshore) %>%
summarise(prob = mean(b_Herbivore_Zonenearshore > 0))
posterior_probs <- tibble(
Functional_Group = c("HTLP", "HTLP", "Mesopredator", "Invertivore", "Herbivore"),
Zone_Comparison = c("Pelagic vs. Wreck", "Nearshore vs. Wreck", "Pelagic vs. Wreck",
"Nearshore vs. Wreck", "Nearshore vs. Wreck"),
Posterior_Prob = c(prob_htlp, prob_htlp_nearshore$prob,
prob_meso_pelagic$prob, prob_invert_nearshore$prob,
prob_herb_nearshore$prob)
)
posterior_probs
# Function to compute posterior probabilities for all zone comparisons
compute_posterior_probabilities <- function(fit_model, baseline_zone = "wreck") {
# Extract posterior draws
draws <- as_draws_df(fit_model)
# Define all functional groups
groups <- c("Herbivore", "Invertivore", "Mesopredator", "HTLP")
# Define comparisons
comparisons <- list(
c("nearshore", "wreck"),
c("pelagic", "wreck"),
c("pelagic", "nearshore")
)
# Loop through each group and comparison
probs <- map_dfr(groups, function(group) {
map_dfr(comparisons, function(comp) {
a <- comp[1]
b <- comp[2]
term_a <- paste0("b_", group, "_Zone", a)
term_b <- if (b == baseline_zone) 0 else paste0("b_", group, "_Zone", b)
diff_samples <- if (term_b == 0) {
draws[[term_a]]
} else {
draws[[term_a]] - draws[[term_b]]
}
tibble(
Functional_Group = group,
Comparison = paste(a, "–", b),
Pr_greater_0 = mean(diff_samples > 0),
Pr_less_0 = mean(diff_samples < 0),
Median = median(diff_samples),
CI_lower = quantile(diff_samples, 0.025),
CI_upper = quantile(diff_samples, 0.975)
)
})
})
return(probs)
}
# Example usage
posterior_probs <- compute_posterior_probabilities(fit_zone)
print(posterior_probs)
View(prob_htlp_nearshore)
functional_groups <- data.frame(
Species = c("Parrotfish", "Rabbitfish", "Butterflyfish", "Angelfish", "Cleaner_Wrasse",
"Batfish", "Thicklip", "Red_Breast", "Slingjaw", "Sweetlips", "Squirrel.Soldier",
"Triggerfish", "Porcupine.Puffer", "Ray", "Brown_Stripe_Snapper",
"Russels_Snapper", "lrg_Snapper", "Eel", "Trevally", "Emperorfish",
"sml_Grouper", "lrg_Grouper", "Barracuda"),
Functional_Group = c("Herbivore", "Herbivore", "Herbivore", "Invertivore", "Invertivore",
"Invertivore", "Invertivore", "Invertivore", "Invertivore", "Invertivore",
"Invertivore", "Invertivore", "Invertivore", "Mesopredator", "Mesopredator",
"Mesopredator", "HTLP", "Mesopredator", "HTLP", "Mesopredator",
"Mesopredator", "HTLP", "HTLP")
)
View(functional_groups)
View(pred_abund_prop)
posterior_differences <-
ggplot(draws_long, aes(x = Difference, y = Group, fill = Comparison)) +
stat_halfeye(slab_alpha = 0.8, point_interval = median_qi, .width = 0.95,
position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed") +
labs(
title = "Posterior Differences in Log-Abundance (vs. Shipwrecks)",
x = "Estimated Log Difference (relative to Shipwreck)",
y = "Functional Group"
) +
scale_fill_manual(values = c("#188041", "#a6dede")) +
theme_minimal(base_size = 12) +
theme(
legend.position = "right",
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)
save_model_outputs <- function(pred_df, abundance_plot, forest_plot, posterior_differences, proportion_plot, output_dir, analysis_date) {
# Save predicted data table
write.csv(pred_df, file = file.path(output_dir, paste0("Predicted_Abundance_", analysis_date, ".csv")),
row.names = FALSE)
# Save abundance bar plot
ggsave(filename = file.path(output_dir, paste0("Predicted_Abundance_Bars_", analysis_date, ".png")),
plot = abundance_plot, width = 8, height = 6)
# Save forest plot
ggsave(filename = file.path(output_dir, paste0("Classification_ForestPlot_", analysis_date, ".png")),
plot = forest_plot, width = 8, height = 6)
# posterior differences
ggsave(filename = file.path(output_dir, paste0("Posterior_Differences_", analysis_date, ".png")),
plot = posterior_differences, width = 8, height = 6)
# Save proportional plot
ggsave(filename = file.path(output_dir, paste0("Proportional_Abundance_", analysis_date, ".png")),
plot = proportion_plot, width = 8, height = 6)
message("✅ Model predictions and all plots saved to: ", output_dir)
}
save_model_outputs(pred_df, abundance_plot, forest_plot, posterior_differences, proportion_plot, output_dir, analysis_date)
# create custom ggplot2 theme
theme_clean <- theme_minimal(base_family = "Times New Roman") +
theme(
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_blank()
)
abundance_plot <- ggplot(pred_df, aes(x = Classification, y = Predicted, fill = Classification)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
facet_wrap(~ Functional_Group, scales = "free_y") +
labs(title = "Predicted Abundance by Site Classification",
x = "Site Classification",
y = "Predicted Abundance") +
theme_clean +
scale_fill_brewer(palette = "BuGn")
print(abundance_plot)
source("~/Documents/1_GLOBAL REEF/0_PROJECTS/AR_Pelagic_Pinnacles/3_ANALYSIS/AR_Pelagic/AR_Pelagic/1.5FG_plots.R")
prop_draws_plot <-ggplot(prop_draws, aes(x = Zone, y = Proportion, fill = Functional_Group)) +
stat_halfeye(
position = position_dodge(width = 0.6),
slab_alpha = 0.6,
point_interval = median_qi,
.width = 0.95
) +
labs(
title = "Posterior Distribution of Functional Group Proportions by Zone",
y = "Proportion of Total Abundance",
x = "Zone"
) +
scale_fill_brewer(palette = "Set2") +
theme_clean
print(prop_draws_plot)
# Plot
proportion_plot_zone <- ggplot(fg_zone, aes(x = Zone, y = Proportion, fill = Functional_Group)) +
geom_bar(stat = "identity") +
labs(title = "Proportional Composition of Functional Groups by Zone",
x = "Zone",
y = "Proportion of Total Fish Count") +
theme_clean +
scale_fill_brewer(palette = "BuGn") # or "Greys" or "PuBu"
print(proportion_plot_zone)
ggplot(pred_abund_prop, aes(x = Zone, y = Proportion, fill = Functional_Group)) +
geom_bar(stat = "identity", position = "stack", color = "white") +
theme_clean +
labs(
title = " ",
y = "Proportion of Predicted Abundance",
x = "Zone"
) +
scale_fill_brewer(palette = "BuGn")
# Plot posterior differences relative to wrecks
zone_diff_plot <- ggplot(zone_diffs, aes(x = value, y = Functional_Group, fill = Zone)) +
stat_halfeye(
slab_alpha = 0.8,
point_interval = median_qi,
.width = 0.95,
position = position_dodge(width = 0.6)
) +
geom_vline(xintercept = 0, linetype = "dashed", color = "black") +
labs(
title = "Posterior Differences in Log-Abundance\n (vs. Shipwrecks)",
x = "Estimated Log Difference (relative to Shipwreck)",
y = "Functional Group",
fill = "Comparison"
) +
scale_fill_manual(values = c(
"Nearshore" = "#188041",
"Pelagic" = "#a6dede"
)) +
theme_clean
print(zone_diff_plot)
source("~/Documents/1_GLOBAL REEF/0_PROJECTS/AR_Pelagic_Pinnacles/3_ANALYSIS/AR_Pelagic/AR_Pelagic/1.8_FG_Zones.R")
# facet by species
# Create and store the plot
p_species_prediction <- ggplot(pred_df, aes(x = Classification, y = estimate__, fill = Classification)) +
geom_col(width = 0.7) +
geom_errorbar(aes(ymin = lower__, ymax = upper__), width = 0.2) +
facet_wrap(~ Species, scales = "free_y", ncol = 6) +
theme_clean +
scale_fill_brewer(palette = "BuGn") +
labs(
title = "Predicted Abundance per Species by Habitat Type",
x = "Habitat Type",
y = "Predicted Abundance"
) +
theme(
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 30, hjust = 1),
legend.position = "none"  # Optional: remove if you want a legend
)
# Extract posterior draws of fitted values for each reef classification
newdata <- expand.grid(
Classification = factor(c("Shipwreck", "Fringing", "Pinnacle"), levels = c("Shipwreck", "Fringing", "Pinnacle")),
Site = NA  # To exclude random effects
)
epreds <- fitted(fit_re, newdata = newdata, re_formula = NA, summary = FALSE)
# Add dimension names
dimnames(epreds) <- list(
draw = 1:dim(epreds)[1],  # 6000 draws
Classification = c("Shipwreck", "Fringing", "Pinnacle"),
Functional_Group = c("Herbivore", "Invertivore", "Mesopredator", "HTLP")
)
# Convert to tidy format
epreds_df <- as.data.frame.table(epreds, responseName = "Predicted") %>%
mutate(draw = as.integer(draw))
# Pivot wider so each row is a draw per group
epreds_wide <- epreds_df %>%
pivot_wider(names_from = Classification, values_from = Predicted)
# Calculate pairwise differences
diffs <- epreds_wide %>%
mutate(
Diff_Fringing_vs_Shipwreck = Fringing - Shipwreck,
Diff_Pinnacle_vs_Shipwreck = Pinnacle - Shipwreck,
Diff_Pinnacle_vs_Fringing = Pinnacle - Fringing
) %>%
pivot_longer(
cols = starts_with("Diff"),
names_to = "Comparison",
values_to = "Difference"
)
# Add functional group
diffs$Functional_Group <- rep(epreds_wide$Functional_Group, each = 3)
# Plot difference distributions
ggplot(diffs, aes(x = Difference, y = Comparison, fill = Comparison)) +
stat_halfeye(.width = c(0.66, 0.95), point_interval = median_qi) +
facet_wrap(~Functional_Group, scales = "free_x") +
geom_vline(xintercept = 0, linetype = "dashed") +
theme_clean +
labs(
title = "Posterior Differences in Functional Group Abundance",
x = "Difference in Predicted Abundance",
y = "Pairwise Comparison"
) +
scale_fill_brewer(palette = "BuGn")
#### using all surveys - not collapsed into same survey date + site
raw_fish <- raw_fish %>%
mutate(
Sweetlips = as.character(Sweetlips),
Sweetlips = na_if(Sweetlips, "-"),      # treat "-" as NA
Sweetlips = as.numeric(Sweetlips)
)
raw_fish <- raw_fish %>%
mutate(sml_snapper = rowSums(select(., Brown_Stripe_Snapper, Russels_Snapper), na.rm = TRUE)) %>%
select(-Brown_Stripe_Snapper, -Russels_Snapper)
clean_raw_fish <- function(df) {
library(dplyr)
library(lubridate)
library(forcats)
# Remove blank rows and columns
df[df == ""] <- NA
df <- df[, colSums(!is.na(df)) > 0]
df <- df[rowSums(!is.na(df)) > 0, ]
# Merge Brown_Stripe_Snapper and Russels_Snapper into sml_snapper
df <- df %>%
mutate(
sml_snapper = rowSums(select(., any_of(c("Brown_Stripe_Snapper", "Russels_Snapper"))), na.rm = TRUE)
) %>%
select(-any_of(c("Brown_Stripe_Snapper", "Russels_Snapper")))
# Rename and align remaining columns
df <- df %>%
rename(
sml_Grouper = Grouper.30,
lrg_Grouper = Grouper.30.1,
lrg_Snapper = Snapper.30,
Date = Date,  # already Date in raw_fish
Duration = Duration,  # already correct
Visibility = Visibility,
Depth = Depth
)
# Format columns
df <- df %>%
mutate(
Date = as.Date(as.character(Date), format = "%m/%d/%Y"),
Time = format(as.POSIXct(as.character(Time), format = "%H:%M"), "%H:%M"),
Weather = as.factor(Weather),
SurveyID = paste(Site, Date, sep = "_")
)
return(df)
}
clean_fish <- clean_raw_fish(raw_fish)
raw_all <- bind_rows(raw_fish, raw_fish_timed)
print(posterior_probs)
# Function to compute posterior probabilities for all zone comparisons
compute_posterior_probabilities_re <- function(fit_model, baseline_zone = "wreck") {
# Extract posterior draws
draws <- as_draws_df(fit_model)
# Define all functional groups
groups <- c("Herbivore", "Invertivore", "Mesopredator", "HTLP")
# Define comparisons
comparisons <- list(
c("Fringing", "Shipwreck"),
c("Pinnacle", "Shipwreck"),
c("Pinnacle", "Fringing")
)
# Loop through each group and comparison
probs <- map_dfr(groups, function(group) {
map_dfr(comparisons, function(comp) {
a <- comp[1]
b <- comp[2]
term_a <- paste0("b_", group, "_Classification", a)
term_b <- if (b == baseline_zone) 0 else paste0("b_", group, "_Zone", b)
diff_samples <- if (term_b == 0) {
draws[[term_a]]
} else {
draws[[term_a]] - draws[[term_b]]
}
tibble(
Functional_Group = group,
Comparison = paste(a, "–", b),
Pr_greater_0 = mean(diff_samples > 0),
Pr_less_0 = mean(diff_samples < 0),
Median = median(diff_samples),
CI_lower = quantile(diff_samples, 0.025),
CI_upper = quantile(diff_samples, 0.975)
)
})
})
return(probs)
}
# Example usage
posterior_probs_re <- compute_posterior_probabilities_re(fit_re, baseline_zone = "Shipwreck")
library(tidyverse)
library(tidybayes)
# Function to compute posterior probabilities for all zone comparisons
compute_posterior_probabilities_re <- function(fit_model, baseline_zone = "wreck") {
# Extract posterior draws
draws <- as_draws_df(fit_model)
# Define all functional groups
groups <- c("Herbivore", "Invertivore", "Mesopredator", "HTLP")
# Define comparisons
comparisons <- list(
c("Fringing", "Shipwreck"),
c("Pinnacle", "Shipwreck"),
c("Pinnacle", "Fringing")
)
# Loop through each group and comparison
probs <- map_dfr(groups, function(group) {
map_dfr(comparisons, function(comp) {
a <- comp[1]
b <- comp[2]
term_a <- paste0("b_", group, "_Classification", a)
term_b <- if (b == baseline_zone) 0 else paste0("b_", group, "_Zone", b)
diff_samples <- if (term_b == 0) {
draws[[term_a]]
} else {
draws[[term_a]] - draws[[term_b]]
}
tibble(
Functional_Group = group,
Comparison = paste(a, "–", b),
Pr_greater_0 = mean(diff_samples > 0),
Pr_less_0 = mean(diff_samples < 0),
Median = median(diff_samples),
CI_lower = quantile(diff_samples, 0.025),
CI_upper = quantile(diff_samples, 0.975)
)
})
})
return(probs)
}
# Example usage
posterior_probs_re <- compute_posterior_probabilities_re(fit_re, baseline_zone = "Shipwreck")
library(posterior)
Function to compute posterior probabilities for all zone comparisons
##### Function to compute posterior probabilities for all zone comparisons
library(posterior)
library(tidybayes)
library(purrr)
library(dplyr)
compute_posterior_probabilities_re <- function(fit_model, baseline_zone = "Shipwreck") {
draws <- as_draws_df(fit_model)
groups <- c("Herbivore", "Invertivore", "Mesopredator", "HTLP")
comparisons <- list(
c("Fringing", "Shipwreck"),
c("Pinnacle", "Shipwreck"),
c("Pinnacle", "Fringing")
)
probs <- map_dfr(groups, function(group) {
map_dfr(comparisons, function(comp) {
a <- comp[1]
b <- comp[2]
term_a <- paste0("b_", group, "_Classification", a)
term_b <- if (b == baseline_zone) 0 else paste0("b_", group, "_Classification", b)
diff_samples <- if (term_b == 0) {
draws[[term_a]]
} else {
draws[[term_a]] - draws[[term_b]]
}
tibble(
Functional_Group = group,
Comparison = paste(a, "–", b),
Pr_greater_0 = mean(diff_samples > 0),
Pr_less_0 = mean(diff_samples < 0),
Median = median(diff_samples),
CI_lower = quantile(diff_samples, 0.025),
CI_upper = quantile(diff_samples, 0.975)
)
})
})
return(probs)
}
# Example usage
posterior_probs_re <- compute_posterior_probabilities_re(fit_re, baseline_zone = "Shipwreck")
print(posterior_probs_re)
